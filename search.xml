<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python基础入门</title>
      <link href="/2022/03/17/python-ji-chu-ru-men/"/>
      <url>/2022/03/17/python-ji-chu-ru-men/</url>
      
        <content type="html"><![CDATA[<h2 id="Life-is-short-use-Python"><a href="#Life-is-short-use-Python" class="headerlink" title="Life is short, use Python."></a>Life is short, use Python.</h2><img src="https://cdn.jsdelivr.net/gh/starryzx/starryzx_Image/imgs_h/202203181809745.png" style="zoom:67%;"><h2 id="1-内置对象、运算符、表达式、关键字"><a href="#1-内置对象、运算符、表达式、关键字" class="headerlink" title="1.内置对象、运算符、表达式、关键字"></a>1.内置对象、运算符、表达式、关键字</h2><h3 id="1-1-Python常用内置对象"><a href="#1-1-Python常用内置对象" class="headerlink" title="1.1 Python常用内置对象"></a>1.1 Python常用内置对象</h3><p>​    <strong>python中一切都是对象</strong>！python中的对象有：<br>​        ◾ 内置对象：可以直接使用<br>​        ◾ 标准库对象：需要导入之后才能使用<br>​        ◾ 扩展库对象：需要先安装相应的扩展库然后导入才能使用</p><h4 id="1-1-1-数据类型（data-type）"><a href="#1-1-1-数据类型（data-type）" class="headerlink" title="1.1.1 数据类型（data type）"></a>1.1.1 数据类型（data type）</h4><p>数据类型表示数据的性质， 有整数、小数、字符串等类型。Python中的**type()**函数可以用来查看数据类型。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'int'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span><span class="token number">2.718</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'float'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str'</span><span class="token operator">></span></code></pre><ol><li>内置的数据类型有整型、实数、复数。整数类型除了常见的十进制整数，还有如下进制：</li></ol><ul><li>二进制，以0b开头，每一位只能是0或1</li><li>八进制，以0o开头，每一位只能是0、1、2、3、4、5、6、7这八个数字之一</li><li>十六进制，以0x开头，每一位只能是0、1、2、3、4、5、6、7、8、9、a、b、c、d、e、f之一</li></ul><ol start="2"><li><p>Python支持任意大的数字</p></li><li><p>由于精度问题，对于实数计算会有一定的误差</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token number">0.4</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token operator">==</span><span class="token number">0.3</span> <span class="token comment" spellcheck="true">#避免直接比较两个实数是否相等</span><span class="token boolean">False</span><span class="token operator">>></span><span class="token operator">></span> abs<span class="token punctuation">(</span><span class="token number">0.4</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token operator">-</span><span class="token number">0.3</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">1e</span><span class="token operator">-</span><span class="token number">6</span> <span class="token comment" spellcheck="true">#1e-6:10的-6次方</span><span class="token boolean">True</span></code></pre></li><li><p>为了提高可读性，Python 3.6.x及更高版本支持在数字中间位置插入单个下划线</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> 1_000_000<span class="token number">1000000</span></code></pre></li></ol><h4 id="1-1-2-变量（variable）"><a href="#1-1-2-变量（variable）" class="headerlink" title="1.1.2 变量（variable）"></a>1.1.2 变量（variable）</h4><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment" spellcheck="true"># 整型变量</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 输出x </span><span class="token number">100</span><span class="token operator">>></span><span class="token operator">></span> y <span class="token operator">=</span> <span class="token number">3.14</span><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">*</span> y<span class="token number">314.0</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#内置函数type()用来查看变量类型</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'float'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true"># 创建为列表对象x，之前的整型变量x不复存在</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> isinstance<span class="token punctuation">(</span>x<span class="token punctuation">,</span>list<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#内置函数isinstance()测试变量是否为指定类型</span><span class="token boolean">True</span></code></pre><ol><li>Python是属于“动态类型语言”的编程语言，所谓动态，是指变量的类型是根据情况自动决定的。</li><li>Python变量不直接存储值，而是存储值的内存地址或引用，这也是变量类型可以随时改变的原因。</li><li>可以使用中文作为变量名，Python 3.x全面支持中文，中文和英文字母都当作一个字符对待。</li><li>在Python中定义变量名的规范：<ul><li>以字母或下划线开头</li><li>不能有空格或标点符号</li><li>不能使用关键字做变量名</li><li>对英文字母大小写敏感</li></ul></li></ol><h4 id="1-1-3-字符串"><a href="#1-1-3-字符串" class="headerlink" title="1.1.3 字符串"></a>1.1.3 字符串</h4><ol><li>在python中，只有字符串类型的常量和变量，没有字符常量和变量，单个字符也是字符串</li><li>表示字符串的界定符：单引号、双引号、三单引号、三双引号</li></ol><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span><span class="token string">'Life is short'</span>    <span class="token comment" spellcheck="true">#单引号</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span><span class="token string">"Life's pathetic"</span>  <span class="token comment" spellcheck="true">#双引号</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>Life's pathetic<span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token triple-quoted-string string">''',let’s pythonic.'''</span>   <span class="token comment" spellcheck="true">#连接字符串</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token string">"Life's pathetic,let’s pythonic."</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">*</span><span class="token number">2</span>                          <span class="token comment" spellcheck="true">#字符串重复</span><span class="token string">"Life's pathetic,let’s pythonic.Life's pathetic,let’s pythonic."</span></code></pre><h4 id="1-1-4-运算符与表达式"><a href="#1-1-4-运算符与表达式" class="headerlink" title="1.1.4 运算符与表达式"></a>1.1.4 运算符与表达式</h4><p><img src="https://cdn.jsdelivr.net/gh/starryzx/starryzx_Image/imgs_h/202203181810298.png"></p><h4 id="1-1-5-Python常用内置函数"><a href="#1-1-5-Python常用内置函数" class="headerlink" title="1.1.5 Python常用内置函数"></a>1.1.5 Python常用内置函数</h4><ol><li>使用 <code>dir(__builtins__)</code> 可以查看所有内置函数和内置对象</li><li>使用 <code>help(函数a名)</code> 可查看函数a的用法</li><li>python常用内置函数，浅看一下</li></ol><p><img src="https://cdn.jsdelivr.net/gh/starryzx/starryzx_Image/imgs_h/202203181810299.png"></p><p><img src="https://cdn.jsdelivr.net/gh/starryzx/starryzx_Image/imgs_h/202203181810300.png"></p><p>(1) 类型转换与判断</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#1.1 进制转换</span><span class="token operator">>></span><span class="token operator">></span> bin<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#转换为二进制串</span><span class="token string">'0b1111011'</span><span class="token operator">>></span><span class="token operator">></span> oct<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#转换为八进制串</span><span class="token string">'0o173'</span><span class="token operator">>></span><span class="token operator">></span> hex<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#转换为十六进制串</span><span class="token string">'0x7b'</span><span class="token comment" spellcheck="true">#1.2 float()将其他类型转换为实数，complex()生成复数</span><span class="token operator">>></span><span class="token operator">></span> float<span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">)</span><span class="token number">3.0</span><span class="token operator">>></span><span class="token operator">></span> complex<span class="token punctuation">(</span><span class="token string">'inf'</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#无穷大，其中inf不区分大小写</span><span class="token punctuation">(</span>inf<span class="token operator">+</span><span class="token number">0j</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> int<span class="token punctuation">(</span><span class="token string">'9'</span><span class="token punctuation">)</span>         <span class="token comment" spellcheck="true">#int(x[,d])返回实数(float),分数(fraction)，高精度实数(decimal)x的整数部分</span><span class="token number">9</span><span class="token operator">>></span><span class="token operator">></span> int<span class="token punctuation">(</span><span class="token string">'110'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#或把d进制的字符串x转换为十进制并返回，d默认为十进制</span><span class="token number">6</span><span class="token comment" spellcheck="true">#1.3 ord()用来返回单个字符的Unicode码，chr()用来返回Unicode编码对应的字符，str()直接将任意类型的参数转换为字符串</span><span class="token operator">>></span><span class="token operator">></span> ord<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span>          <span class="token number">97</span><span class="token operator">>></span><span class="token operator">></span> chr<span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span><span class="token string">'A'</span><span class="token operator">>></span><span class="token operator">></span> chr<span class="token punctuation">(</span>ord<span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#Python不允许字符串与数字之间的加法操作</span><span class="token string">'B'</span><span class="token operator">>></span><span class="token operator">></span> chr<span class="token punctuation">(</span>ord<span class="token punctuation">(</span><span class="token string">'国'</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#支持中文</span><span class="token string">'图'</span><span class="token operator">>></span><span class="token operator">></span> str<span class="token punctuation">(</span><span class="token number">1234</span><span class="token punctuation">)</span><span class="token string">'1234'</span><span class="token operator">>></span><span class="token operator">></span> str<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1234</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token string">'[1234]'</span><span class="token comment" spellcheck="true">#1.3 list(),tuple(),dict(),set()</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">#把range对象转换为列表</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> tuple<span class="token punctuation">(</span>_<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#下划线表示上一次正确的输出结果  </span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> dict<span class="token punctuation">(</span>zip<span class="token punctuation">(</span><span class="token string">'1234'</span><span class="token punctuation">,</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">#创建字典</span><span class="token punctuation">{</span><span class="token string">'1'</span><span class="token punctuation">:</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">:</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">:</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">:</span> <span class="token string">'d'</span><span class="token punctuation">}</span><span class="token operator">>></span><span class="token operator">></span> set<span class="token punctuation">(</span><span class="token string">'111222334'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#创建可变集合，自动去除重复</span><span class="token punctuation">{</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#1.4 eval()用来计算字符串的值，或者实现类型转换</span><span class="token operator">>></span><span class="token operator">></span> eval<span class="token punctuation">(</span><span class="token string">'3+5'</span><span class="token punctuation">)</span><span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> eval<span class="token punctuation">(</span>b<span class="token string">'3+5'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#引号前面加b表示字节串</span><span class="token number">8</span><span class="token operator">>></span><span class="token operator">></span> eval<span class="token punctuation">(</span><span class="token string">'09'</span><span class="token punctuation">)</span>          <span class="token comment" spellcheck="true">#抛出异常，不允许以0开头的数字</span>   SyntaxError<span class="token punctuation">:</span> invalid token<span class="token operator">>></span><span class="token operator">></span> int<span class="token punctuation">(</span><span class="token string">'09'</span><span class="token punctuation">)</span>           <span class="token number">9</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>str<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'['</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">,</span> <span class="token string">' '</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">']'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> eval<span class="token punctuation">(</span>str<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#字符串求值</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">#1.5 type() ,isinstance()判断数据类型</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'list'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">in</span> <span class="token punctuation">(</span>list<span class="token punctuation">,</span>tuple<span class="token punctuation">,</span>dict<span class="token punctuation">)</span><span class="token boolean">False</span><span class="token operator">>></span><span class="token operator">></span> isinstance<span class="token punctuation">(</span><span class="token number">3j</span><span class="token punctuation">,</span><span class="token punctuation">(</span>int<span class="token punctuation">,</span>float<span class="token punctuation">,</span>complex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token boolean">True</span></code></pre><p>(2) <strong>最值与求和</strong></p><p>max()、min()、sum()分别用于计算列表、元组或其他包含有限个元素的可迭代对象中所有元素最大值、最小值、所有元素之和</p><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true">#列表推导式，生成包含3个子列表的列表，每个子列表中包含5个介于[1,50]区间的任意整数</span><span class="token operator">>></span><span class="token operator">></span> lst<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> j <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> max<span class="token punctuation">(</span>lst<span class="token punctuation">,</span>key<span class="token operator">=</span>sum<span class="token punctuation">)</span>                 <span class="token comment" spellcheck="true">#返回元素之和最大的子列表</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token operator">=</span>max<span class="token punctuation">(</span>lst<span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#所有子列表中第2个元素最大的子列表</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>max<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>min<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>sum<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>sum<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">/</span>len<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span> <span class="token number">50</span> <span class="token number">12</span> <span class="token number">155</span> <span class="token number">31.0</span></code></pre><p>(3) <strong>基本输入/输出</strong></p><p>不论输入什么，input()一律作为字符串对待</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span>input<span class="token punctuation">(</span><span class="token string">'please input:'</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#input()函数参数表示提示信息</span>please input<span class="token punctuation">:</span><span class="token number">1123</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token string">'1123'</span><span class="token operator">>></span><span class="token operator">></span> type<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'str'</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> int<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token number">1123</span></code></pre><p><code>print(value1,value2,...,sep=' ',end='\n',file=sys.stdout,flush=False)</code></p><p>sep参数用于指定数据之间的分隔符，默认为空格。end参数用于指定每个输出之后的分隔符，默认换行</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">'\t'</span><span class="token punctuation">)</span><span class="token number">1</span>    <span class="token number">2</span>    <span class="token number">3</span>    <span class="token number">4</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment" spellcheck="true">#修改end参数，每个输出之后不换行</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> </code></pre><p>(4) <strong>排序与逆序</strong></p><p>sorted()可以对列表、元组、字典、集合或其他可迭代对象进行排序并返回新列表，支持使用key参数指定排序规则</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span>list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> random<span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>x<span class="token punctuation">)</span>               <span class="token comment" spellcheck="true">#shuffle()用来随机打乱顺序</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> sorted<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true">#sorted()默认升序排列，参数reverse=false</span><span class="token operator">>></span><span class="token operator">></span> sorted<span class="token punctuation">(</span>x<span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> item<span class="token punctuation">:</span>len<span class="token punctuation">(</span>str<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#转换为字符串后按字符串中的字符个数进行降序排列</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> sorted<span class="token punctuation">(</span>x<span class="token punctuation">,</span>key<span class="token operator">=</span>str<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> x                               <span class="token comment" spellcheck="true">#不影响原来列表的元素顺序</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'aaa'</span><span class="token punctuation">,</span><span class="token string">'bc'</span><span class="token punctuation">,</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token string">'bbbb'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> sorted<span class="token punctuation">(</span>x<span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> item<span class="token punctuation">:</span><span class="token punctuation">(</span>len<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment" spellcheck="true">#先按长度排序，长度一样的正常排序</span><span class="token punctuation">[</span><span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'bc'</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">,</span> <span class="token string">'bbbb'</span><span class="token punctuation">]</span></code></pre><p>reversed()可以对可迭代对象（生成器对象和具有惰性求值特性的zip、map、filter、enumerate等类似对象除外）进行翻转（首尾交换）并返回可迭代的reversed对象</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>reversed<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>             <span class="token comment" spellcheck="true">#reversed对象是可迭代的</span><span class="token punctuation">[</span><span class="token string">'bbbb'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'bc'</span><span class="token punctuation">,</span> <span class="token string">'aaa'</span><span class="token punctuation">]</span></code></pre><p>(5) <strong>枚举与迭代</strong></p><p>enumerate()函数用来枚举可迭代对象中的元素，返回可迭代的enumerate对象，其中每个元素都是包含索引和值的元组。使用时，即可以把enumerate对象转换为列表、元组、集合，也可以使用for循环直接遍历其中元素。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>enumerate<span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                  <span class="token comment" spellcheck="true">#枚举字符串中的元素</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>enumerate<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">,</span><span class="token string">'WuLa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true">#枚举列表中的元素</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'Python'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'WuLa'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> index<span class="token punctuation">,</span>value <span class="token keyword">in</span> enumerate<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> </code></pre><p>(6) <strong>map()函数</strong></p><p>map()把一个函数func依次映射到序列的每个元素上，并返回一个可迭代的map对象作为结果，map对象中每个元素是原序列中元素经过函数func处理后的结果，map()不对原序列做任何修改</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>str<span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">#把列表中元素转换为字符串</span><span class="token punctuation">[</span><span class="token string">'0'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'4'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">add3</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">:</span>                  <span class="token keyword">return</span> v<span class="token operator">+</span><span class="token number">5</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>add3<span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#把单参函数add3()映射到一个序列上的所有元素</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>               <span class="token comment" spellcheck="true">#接收两个参数的函数</span>    <span class="token keyword">return</span> x<span class="token operator">+</span>y<span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>add<span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">#把双参数函数映射到两个序列上</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span>x<span class="token operator">+</span>y<span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span><span class="token number">232412134141341</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>map<span class="token punctuation">(</span>int<span class="token punctuation">,</span>str<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment" spellcheck="true">#提取整数x每位上的数字</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></code></pre><p>(7) <strong>reduce()函数</strong></p><p>标准库functools中的函数reduce()可将一个双参数函数以迭代累计的方式从左到右依次作用到一个序列或迭代器对象的所有元素上，并且允许制定一个初始值。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> functools <span class="token keyword">import</span> reduce<span class="token operator">>></span><span class="token operator">></span> reduce<span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">,</span>y<span class="token punctuation">:</span>x<span class="token operator">+</span>y<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">#计算过程：(((1+2)+3)+4)+5</span><span class="token number">15</span></code></pre><p>(8) <strong>filter()函数</strong></p><p>filter()将一个单参数函数func作用到一个序列上，返回该序列中满足使func返回值为True的元素组成的filter元素，若func为None，则返回序列中等价于True的函数。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> seq<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span><span class="token string">'zx11'</span><span class="token punctuation">,</span><span class="token string">'???'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> x<span class="token punctuation">.</span>isalnum<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#isalnum()使字符串的方法，用于测试x是否为字母或数字</span><span class="token operator">>></span><span class="token operator">></span> filter<span class="token punctuation">(</span>func<span class="token punctuation">,</span>seq<span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#返回filter对象</span><span class="token operator">&lt;</span>filter object at <span class="token number">0x00000208298D64A8</span><span class="token operator">></span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>filter<span class="token punctuation">(</span>func<span class="token punctuation">,</span>seq<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#将filter对象转换为列表</span><span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span> <span class="token string">'zx11'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> seq<span class="token punctuation">[</span><span class="token string">'python'</span><span class="token punctuation">,</span> <span class="token string">'zx11'</span><span class="token punctuation">,</span> <span class="token string">'???'</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true">#不对原列表做任何修改</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>filter<span class="token punctuation">(</span>None<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#func为None，则返回序列中等价于True的函数</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span></code></pre><p>(9) <strong>range()函数</strong></p><p>range([start,] stop [,step])返回具有惰性求值特点的range对象，包含左闭右开区间[start,stop）内以step为步长的整数，参数start默认为0，step默认为1。</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#start默认为0，step默认为1</span>range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>_<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#指定起始值和步长</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#步长为负数时，start应比end大</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true">#循环4次</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">" "</span><span class="token punctuation">)</span>    <span class="token number">3</span> <span class="token number">3</span> <span class="token number">3</span> <span class="token number">3</span> </code></pre><p>(10) <strong>zip()函数</strong></p><p>zip()用来把多个可迭代对象中对应位置上的元素压缩在一起，返回一个可迭代的zip()对象</p><pre class=" language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x<span class="token operator">=</span>zip<span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">#压缩字符串和列表</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>x<span class="token punctuation">)</span>                        <span class="token comment" spellcheck="true">#zip对象只能遍历一次，访问过的元素就不存在了，enumerate、filter、map对象以及生成器对象也有这个特点</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true">#对1个序列也能压缩</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'d'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> list<span class="token punctuation">(</span>zip<span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">,</span><span class="token string">'abc'</span><span class="token punctuation">,</span><span class="token string">',./'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#压缩三个序列</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'1'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> item <span class="token keyword">in</span> zip<span class="token punctuation">(</span><span class="token string">'abcd'</span><span class="token punctuation">,</span>range<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true">#zip对象是可迭代的</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>    <span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> key_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> val_list<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Estrella'</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> dict<span class="token punctuation">(</span>zip<span class="token punctuation">(</span>key_list<span class="token punctuation">,</span>val_list<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">#两个序列打包成一个字典</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'Estrella'</span><span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">}</span></code></pre><p>**未完待续…**🌹🌹🌹</p><hr><p>[^ © 版权声明]: 本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a> 许可协议。转载请注明来自<a href="https://starryzx.github.io/">Estrella</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/03/07/hello-world/"/>
      <url>/2022/03/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
